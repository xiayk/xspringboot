<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiayk.xspringboot.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.xiayk.xspringboot.model.user.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="ucode" property="ucode" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phonenum" property="phoneNum" jdbcType="VARCHAR" />
    <result column="NICKNAME" property="nickname" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="addres" property="addres" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="QQ" property="qq" jdbcType="VARCHAR" />
    <result column="other" property="other" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    u.uid, u.password, u.ucode, u.username, u.email, u.phonenum, u.NICKNAME, u.role, u.rid,u.regtime
  </sql>
  <sql id="Base_Column_List_userinfo" >
    i.iid, i.addres, i.sex, i.ip, i.job, i.QQ, i.other, i.headurl
  </sql>

  <select id="getAllUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />,
    <include refid="Base_Column_List_userinfo" />
    from userinfo i inner join user u
    on u.uid = i.uid
  </select>

  <!--1,通过uid查找用户信息 userinfo and user 两表-->
  <select id="findUserByUid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />,
    <include refid="Base_Column_List_userinfo" />
    from userinfo i inner join user u
    where u.uid = i.uid
    and u.uid = #{uid,jdbcType=INTEGER}
    and ustatus>0
  </select>

  <!--手机号查询-->
  <select id="findUserByPhoneNumber" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />,
    <include refid="Base_Column_List_userinfo" />
    from userinfo i inner join user u
    where u.uid = i.uid
    and u.phonenum = #{phoneNum,jdbcType=VARCHAR}
    and ustatus>0
  </select>

  <!--2,分页获取所有用户信息 userinfo and user 表-->
  <select id="getUsersLimit" resultType="com.xiayk.xspringboot.model.user.User" parameterType="Map">
    select
    <include refid="Base_Column_List" />,
    <include refid="Base_Column_List_userinfo" />
    from userinfo i inner join user u
    where u.uid = i.uid
    and ustatus>0
    limit #{page,jdbcType=INTEGER},#{limit,jdbcType=INTEGER};
  </select>

  <!--3,通过用户名查找用户 (登录)-->
  <select id="findUserByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />,
    <include refid="Base_Column_List_userinfo" />
    from userinfo i inner join user u
    where u.uid = i.uid
    and username = #{username, jdbcType=VARCHAR}
    and ustatus>0;
  </select>

  <!--4,查找所有用户 user表-->
  <select id="getUsers" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />,
    <include refid="Base_Column_List_userinfo" />
    from userinfo i inner join user u
    where u.uid = i.uid and ustatus>0;

  </select>

  <!--5,通过uid删除用户 user 表-->
  <delete id="delUserByUid" parameterType="java.lang.Integer" >
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>

  <!--6,通过uid删除用户 user 表-->
  <delete id="delUserByUsername" parameterType="java.lang.Integer" >
    delete from user
    where username = #{username,jdbcType=VARCHAR};
  </delete>

  <!--7,添加用户 user 表-->
  <insert id="insert" parameterType="com.xiayk.xspringboot.model.user.User" >
    insert into user (uid, password, ucode,
      username, email, phonenum,
      NICKNAME, role, rid, regtime)
    values (#{uid,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{ucode,jdbcType=VARCHAR},
      #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phoneNum,jdbcType=VARCHAR},
      #{nickname,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR},#{rid,jdbcType=INTEGER}, #{regtime,jdbcType=VARCHA);
  </insert>

  <!--8,修改用户密码-->
  <update id="updatePass" parameterType="com.xiayk.xspringboot.model.user.User" >
    update user set password = #{password,jdbcType=VARCHAR}
    where username = #{username,jdbcType=VARCHAR}
  </update>

  <!--9,修改用户信息-->
  <update id="updateUserByUsername" parameterType="com.xiayk.xspringboot.model.user.User" >
    update user u inner join userinfo i
    <set>
      <if test="ucode != null" >
        u.ucode = #{ucode,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        u.email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null" >
        u.phonenum = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="headurl != null" >
        i.headurl = #{headurl,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        u.NICKNAME = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="rid != null" >
        u.rid = #{rid,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        u.role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="addres != null" >
        i.addres = #{addres,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        i.sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        i.ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        i.job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        i.QQ = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="other != null" >
        i.other = #{other,jdbcType=VARCHAR},
      </if>
    </set>
    where u.uid = i.uid
    and u.username = #{username,jdbcType=VARCHAR};
  </update>

</mapper>